#include<stdio.h>
#include<stdlib.h>

struct node{
    int data;
    struct node *next;
}*head=NULL;


void insert(){
    int data_new,position,k=1;
    struct node *p, *q,  *new_node;
    new_node = (struct node *)malloc(sizeof(struct node));
    if(!new_node) printf("Memory error");
    printf("\nEnter the data of the new node to be inserted: ");
    scanf("%d",&data_new);
    printf("\nEnter the position of the new node to be inserted: ");
    scanf("%d",&position);
    new_node->data=data_new;
    p=head;
    if(position==1){
        new_node->next=head;
        head=new_node;
    }
    else{
        while((p!=NULL) && (k<position)){
            q=p;
            k++;
            p=p->next;
        }
        q->next=new_node;
        new_node->next=p;
    }
}

void delete(){
    int k=1,position;
    struct node *p,*q;
    printf("\nEnter the position of the data to be deleted: ");
    scanf("%d",&position);
    if(head==NULL){
        printf("Empty list");
    }
    else{
        p=head;
        if(position==1){
            head=head->next;
            free(p);
        }
        else{
            while((p!=NULL)&&(k<position)){
                k++;
                q=p;
                p=p->next;
            }
            if(p==NULL){
                printf("Position does not exist");
            }
            else{
                q->next=p->next;
                free(p);
            }
        }
    }
}

void display(){
    struct node *new_node;
    printf("\nThe linked list is:\n ");
    new_node=head;
    while(new_node!=NULL){
        printf("%d--->",new_node->data);
        new_node=new_node->next;
    }    
    printf("NULL");
}

void main(){
    insert();
    display();
    insert();
    display();
    insert();
    display();
    insert();
    display();
    insert();
    display();
    insert();
    display();
}
