#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *next;
    struct node *prev;
}*head=NULL;

void insert()
{
   struct node *p, *new_node;
   int position;
   new_node=(struct node *)malloc(sizeof(struct node));
   printf("\nEnter the data to be inserted: ");
   scanf("%d",&new_node->data);
   printf("Enter the position of the data: ");
   scanf("%d",&position);
   p=head;
   if(position==1||head==NULL)
   {
   new_node->next=head;
   new_node->prev=NULL;
   if(head)
   p->prev=new_node;
   head=new_node;
   }
   else
   {
       position--;
       while(position-- && p->next!=NULL)
       p=p->next;
       if(position>0)
       {
          p->next=new_node;
          new_node->prev=p;
          new_node->next=NULL;
       }
       else
       {
       
       new_node->prev=p->prev;
       new_node->next=p;
       p->prev->next=new_node;
       p->prev=new_node;
       }
       
   }
   
    
}
void display()
{
    struct node *p;
    p=head;
    while(p!=NULL){
        printf("%d-->",p->data);
        p=p->next;
    }
    printf("NULL");
}

void delete(){
    struct node *p;
    int position;
    printf("\nEnter the data to be deleted: ");
    scanf("%d",&position);
    p=head;
    if(head==NULL) printf("The list is empty");
    else{
        if(position==1){
            head=head->next;
            head->prev=NULL;
            free(p);
        }
        else{
            position--;
            while(position-- && p->next!=NULL){
                p=p->next;
            }
            if(position>0){
                printf("Position does not exist");
            }
            else{
                p->prev->next=p->next;
                if(p->next) p->next->prev=p->prev;
                free(p);
            }
        }
    }
}


int main()
{
    insert();
    display();
    insert();
    display();
    insert();
    display();
    delete();
    display();
    delete();
    display();
    delete();
    display();
    return 0;
}
